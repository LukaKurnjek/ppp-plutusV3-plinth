
/*
Off-chain code for the NFT validator (nftVal) defined in 
https://github.com/input-output-hk/plutus-pioneer-program/blob/plinth-plutusV3/src/Week05/Minting.hs

NOTES: Before running the code input a blockfrost key for preview in line 31. 
*/

import { 
    BlockfrostProvider, 
    MeshWallet, 
    PlutusScript,
    applyCborEncoding,
    UTxO,
    metadataToCip68,
    AssetMetadata,
    resolvePlutusScriptAddress,
    stringToHex,
    MeshTxBuilder,
    mConStr0,
    CIP68_100,
    CIP68_222, 
    serializePlutusScript
  } from "@meshsdk/core";
import { applyParamsToScript } from "@meshsdk/core-cst";
import { secretSeed } from "./seed.ts";
/* seed.ts has to be in form of: 
    export const secretSeed = ["seed1", "seed2", ... ] */

// Define blockchain provider and wallet 
const provider: BlockfrostProvider = new BlockfrostProvider("<blockfrost-key>");
const wallet: MeshWallet = new MeshWallet({
    networkId: 0, //0=testnet, 1=mainnet
    fetcher: provider,
    submitter: provider,
    key: {
        type: "mnemonic",
        words: secretSeed
    }
});

// Define address and collateral 
const changeAddress: string = await wallet.getChangeAddress();
const collateral: UTxO = (await wallet.getCollateral())[0]!;

// Defining the UTXO we want to spend 
const utxos: UTxO[] = await wallet.getUtxos();
const utxo: UTxO = utxos[15];

// Defining token name 
const tokenName = 'NFT 1';
const tokenNameHex = stringToHex(tokenName);

// Defining our NFT policy 
const nftPolicy: PlutusScript = {
    code: applyParamsToScript(
            applyCborEncoding("590bf50101003232323232323232323232323232222259323232323232323232932323255333573466e1d200000211328009919192a999ab9a3370e90000010899191919191919191919191919191919194004c00cd5d08094c00cd5d0808ccc0b007cd5d08084dd69aba100f99800a8101aba100e9981600e1aba100d999818016bad3574201932323255333573466e1d2000002118009919192a999ab9a3370e900000108c004cc0c1d69aba100198179aba135744002113035491035054310035573c0046aae74004dd51aba10019919192a999ab9a3370e900000108c004cc0c1d69aba100198179aba1357440021130354901035054310035573c0046aae74004dd51aba1357440021130324901035054310035573c0046aae74004dd51aba100b998163ae35742015333030232323255333573466e1d2000002118019bae357420021155333573466e1d20020021180498111aba100108aa999ab9a3370e900200108c01cc0c4d5d080084554ccd5cd19b8748018008460026eb4d5d0800cc080d5d09aba200108aa999ab9a3370e900400108c02cc084d5d080084554ccd5cd19b87480280084600a6eb4d5d0800cc07cd5d09aba2001089819a481035054310035573c0046aae74004dd50008141aba1009998008141aba10089bae3574200f33303001d3303002b232323255333573466e1d20000021180108aa999ab9a3370e900100108c0104554ccd5cd19b8748010008460002260669201035054310035573c0046aae74004dd50009aba10069981600d9aba100598011aba100498011aba135744008302f75c6058eb4c0a48c8c8c954ccd5cd19b874800000846002603e6ae8400660406ae84d5d1000844c0c1241035054310035573c0046aae74004dd50009aba2001357440026ae88004d5d10009aba2001357440026ae88004d5d10009aba2001357440026ae88004d5d10009aba20013574400222603c921035054310035573c0046aae74004dd51aba10029aba10019919192a999ab9a3370e900000108c00cdd71aba100108aa999ab9a3370e900100108c024c034d5d0800ccc07405cd5d09aba200108aa999ab9a3370e900200108c01cc070d5d080084554ccd5cd19b8748018008460026eb4d5d0800cc02cd5d09aba200108aa999ab9a3370e900400108c02cc030d5d080084554ccd5cd19b87480280084600a6eb4d5d0800cc028d5d09aba200108980f2481035054310035573c0046aae74004dd51aba135744002357440022260349201035054310035573c0046aae74004dd5005488a400e444444444444444464b2b2602c0231800460048ac800c60011801230022c9981640000323002910c8014889640122aa666ae68cdc780100c88999ab9a3370e9001000c00200423002910c00806eb8028c06489640063002910acc80148a400a45201f2255333573466e3c01000844ccd5cd19b87003001800400846004230008980200084646464aa666ae68cdc3a40000042265001375a6ae8400a602e6ae84006646464aa666ae68cdc3a400000422650093301c01935742005357420033301c75c6ae84d5d10008d5d100088aa999ab9a3370e900100108c004cc06c060d5d0800cc8c8c954ccd5cd19b8748000008460026eb4d5d0800cdd69aba13574400211301f4901035054310035573c0046aae74004dd51aba1357440021155333573466e1d20040021180599980e80d3ad357420033301b75c6ae84d5d100084554ccd5cd19b87480180084600e660360306ae8400422aa666ae68cdc3a401000422646500d3301d01a357420073301b01c3574200533301f01c75a6ae840072646464aa666ae68cdc3a400000423001375a6ae840066eb4d5d09aba2001089810a481035054310035573c0046aae74004dd51aba13574400322330170020010d5d10009aba20011155333573466e1d200a002118029980d80c1aba10019919192a999ab9a3370e9000001089980f3ae3574200222603e9201035054310035573c0046aae74004dd51aba1357440021155333573466e1d200c0021180108980e2481035054310035573c0046aae74004dd51aba135744002357440022260309201035054310035573c0046aae74004dd500091919192a999ab9a3370e900000108c034c054d5d0800ccc059d69aba1357440021155333573466e1d200200211809980a9aba10019980b3ad357426ae8800422a64a666ae68cdc3a4008006230033016357420053001357426ae8800822aa666ae68cdc3a400c006226500b301735742007300235742003375a6ae84d5d10008d5d100108aa999ab9a3370e900400188c024c058d5d08014dd69aba1357440041155333573466e1d200a0031180a980b1aba100208aa999ab9a3370e900600188c044c058d5d08014dd69aba1357440041155333573466e1d200e003118029bae35742005375c6ae84d5d100104554ccd5cd19b874804000c4600e6eb8d5d08014dd69aba1357440041155333573466e1d201200311800980b1aba1002980b1aba1357440041155333573466e1d201400311807980b1aba100208980c24810350543100232323255333573466e1d2000002118009bae35742002115325333573466e1d20020031180298009aba100208aa999ab9a3370e900200188c00cdd71aba100298009aba13574400411301c49010350543100232323255333573466e1d200000211800980e9aba100108aa999ab9a3370e900100108c0084554ccd5cd19b87480100084600822603e9201035054310035573c0046aae74004dd50009aab9e00235573a0026ea8004d55cf0011aab9d00137540024646464aa666ae68cdc3a4000004230013014357420021155333573466e1d200200211801980a1aba100108aa999ab9a3370e900200108c014dd71aba100108980b2481035054310035573c0046aae74004dd500091919192a999ab9a3370e900000108c004dd71aba10019bad357426ae8800422602a9201035054310035573c0046aae74004dd500091919192a999ab9a3370e90000010899194004c8c8c954ccd5cd19b874800000846002602e6ae84006660304646464aa666ae68cdc3a400000423001301b357420021155333573466e1d200200211328019bad35742005375a6ae840066eb4d5d09aba20011aba200111301d4901035054310035573c0046aae74004dd50009aba135744002113019491035054310035573c0046aae74004dd51aba100399980bbae50073574200532323255333573466e1d20000021180008aa999ab9a3370e900100108c014dd71aba100108aa999ab9a3370e900200108c00cd5d0800844c065241035054310035573c0046aae74004dd51aba10019980abae357426ae880046ae88004d5d100088980a249035054310035573c0046aae74004dd50008998083ae75b001375c009375a0068a4d1300e4901035054350018069112a999ab9a3370e9000000889806248103505433001155333573466e200052000113300333702900000119b814800000444ca00266e1000c00666e10008004660080040026018444aa666ae68cdc3a400000222004226600600266e1800800480048c8c8c954ccd5cd19b87480000084600422aa666ae68cdc3a40040042300011300a4901035054310035573c0046aae74004dd5000911919192a999ab9a3370e900000108c0084554ccd5cd19b874800800846002600a6ae8400422aa666ae68cdc3a40080042300411300a491035054310035573c0046aae74004dd500091919192a999ab9a3370e900000108c004dd71aba10019bad357426ae880042260109201035054310035573c0046aae74004dd5000919118011bac00130082233335573e0025000280198021aba100298019aba200240008c8c8c954ccd5cd19b8748000008460026eb8d5d080084554ccd5cd19b8748008008460066eb8d5d0800844c0192401035054310035573c0046aae74004dd5000911919192a999ab9a3370e900100108c0084554ccd5cd19b874800000846002600a6ae8400422600c921035054310035573c0046aae74004dd5000919319ab9c0018001119118011bab00130052233335573e0025000232801c004c018d55ce800cc014d55cf000a60086ae8800c6ae8400a0006004444b20031002910c801488cc01cccc02000801800400c300122225900188014886400a44aa666ae68cdc3a40000022266601000e00c0062266601000f003800803c00a002803000c23230010012300223300200200101"),
            [utxo.input.txHash, BigInt(utxo.input.outputIndex), tokenName]),
    version: "V3"
};
const policyId = resolvePlutusScriptAddress(nftPolicy, 0);
//const { address: scriptAddress } = serializePlutusScript(nftPolicy);

const userTokenMetadata = {
  name: tokenName,
  image: "ipfs://QmRzicpReutwCkM6aotuKjErFCUD213DpwPq6ByuzMJaua",
  mediaType: "image/jpg",
  description: "Test",
};

const txBuilder = new MeshTxBuilder({
  fetcher: provider, // get a provider https://meshjs.dev/providers
  verbose: true,
});

// Minting our NFT  
async function mintNFT(): Promise<string> {
    const unsignedTx = await txBuilder
    .setNetwork("preview")
    .txIn(
        utxos[15]?.input.txHash!,
        utxos[15]?.input.outputIndex!,
        utxos[15]?.output.amount!,
        utxos[15]?.output.address!,
    )
    .mintPlutusScriptV3()
    .mint("1", policyId, CIP68_100(tokenNameHex))
    .mintingScript(nftPolicy.code!)
    .mintRedeemerValue(mConStr0([]))
    //scriptAddress
    .txOut(changeAddress, [{ unit: policyId + CIP68_100(tokenNameHex), quantity: "1" }])
    .txOutInlineDatumValue(metadataToCip68(userTokenMetadata))
    .changeAddress(changeAddress)
    .selectUtxosFrom(utxos)
    .txInCollateral(
        collateral.input.txHash,
        collateral.input.outputIndex,
        collateral.output.amount,
        collateral.output.address,
    )
    .complete();

    const signedTx = await wallet.signTx(unsignedTx, true);
    const txHash = await wallet.submitTx(signedTx);
    return txHash
}

// Function calls 
console.log(await mintNFT());

// -------------------------------------------------------------

// Plutus images encoded as base64
export const tokenMetadata : AssetMetadata = {
  name: "Plutus test token",
  image: "base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4NCjwhLS0gR2VuZXJhdG9yOiBBZG9iZSBJbGx1c3RyYXRvciAyMi4wLjEsIFNWRyBFeHBvcnQgUGx1Zy1JbiAuIFNWRyBWZXJzaW9uOiA2LjAwIEJ1aWxkIDApICAtLT4NCjxzdmcgdmVyc2lvbj0iMS4xIiBpZD0iTGF5ZXJfMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeD0iMHB4IiB5PSIwcHgiDQoJIHZpZXdCb3g9IjAgMCA1NTAgNTUwIiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCA1NTAgNTUwOyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+DQo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPg0KCS5zdDB7ZmlsbDojMTc0NkEwO30NCgkuc3Qxe2ZpbGw6dXJsKCNTVkdJRF8xXyk7fQ0KPC9zdHlsZT4NCjxnPg0KCTxyZWN0IHg9IjExOC4yIiB5PSIyMDYuMSIgY2xhc3M9InN0MCIgd2lkdGg9IjQ0LjkiIGhlaWdodD0iMzE2LjIiLz4NCgk8cmFkaWFsR3JhZGllbnQgaWQ9IlNWR0lEXzFfIiBjeD0iMjc4LjUxNTciIGN5PSIyNzIuMjQ5NiIgcj0iMjUwIiBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSI+DQoJCTxzdG9wICBvZmZzZXQ9IjAiIHN0eWxlPSJzdG9wLWNvbG9yOiMxRkMxQzMiLz4NCgkJPHN0b3AgIG9mZnNldD0iMC42IiBzdHlsZT0ic3RvcC1jb2xvcjojMUE3OUFFIi8+DQoJCTxzdG9wICBvZmZzZXQ9IjEiIHN0eWxlPSJzdG9wLWNvbG9yOiMxNzQ2QTAiLz4NCgk8L3JhZGlhbEdyYWRpZW50Pg0KCTxwYXRoIGNsYXNzPSJzdDEiIGQ9Ik0yOC41LDIyLjR2NDk5LjhINzNWMTYyLjZoMzEzLjRWMzgwSDI5OHY1My44aDEzOC44VjExMi45SDczVjcyaDQwNS40djQwMC4xSDI1OGwwLTQwLjdsMC41LTQ5LjF2LTQzLjFoNDUuMw0KCQlsMi41LTAuMWgzOC40VjIwNC4ySDIwOS40djMxOGgzMTkuMXYtNTAwTDI4LjUsMjIuNHogTTI5Ny42LDI1NC4ydjM1LjloLTM5LjJ2LTM1LjlIMjk3LjZ6Ii8+DQo8L2c+DQo8L3N2Zz4NCg==",
  mediaType: "image/svg+xml",
  description: "A Plutus NFT test token",
}
